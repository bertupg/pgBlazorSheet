<div class="workbook">
    <span @ref="StatusBar" style="width:100%">
        Position: @CurrentPosition
        Selection: @($"{Selection} ({(Selection.Size.Row==0?"[ALL]":Selection.Size.Row)}Rx{(Selection.Size.Col==0?"[ALL]": Selection.Size.Col)}C)")
        @if (LastMouseEvent != null)
        {
            <span style="border:@(MouseDown?"2px solid red":"none")">
                Mouse Button: @LastMouseEvent.Button
                @(LastMouseEvent.ShiftKey?"+SHIFT":"")
                @(LastMouseEvent.CtrlKey?"+CTRL":"")
                @(LastMouseEvent.AltKey?"+ALT":"")
                @(LastMouseEvent.MetaKey?"+META":"")
                (@LastMouseEvent.Type)
            </span>
        }

        Data Size: @SheetData.Count
        @if (LastKeyEvent != null)
        {
            <span style="border:@(KeyDown?"2px solid red":"none")"> Key Press: @LastKeyEvent.Key Code: @LastKeyEvent.Code
                    @(LastKeyEvent.ShiftKey?"+SHIFT":"")
                    @(LastKeyEvent.CtrlKey?"+CTRL":"")
                    @(LastKeyEvent.AltKey?"+ALT":"")
                    @(LastKeyEvent.MetaKey?"+META":"")
            </span>
        }
    </span>

    <div class="sheet" @ref="SheetDiv" tabindex="0"
     @onkeydown="SheetKeyDown" @onkeydown:preventDefault="true" @onkeydown:stopPropagation="true"
     @onkeyup="e => { KeyDown = false; }"
     >
    @{
        var top = 0; var left = 0;var width = 80;var height = 30;
        for (int row = 0; row <= Rows; row++)
        {
            left = 0;
            for (int col = 0; col <= Columns; col++)
            {
                width = (col == 0 ? 30 : 80);
                Position pos = (row, col);
                <div class=@GetCellClass(pos)
                        style="@($"top:{top}px;left:{left}px;width:{width}px;height:{height}px")"
                        @onclick="e => CellClick(pos, e)" @onclick:preventDefault="true" @onclick:stopPropagation="true"
                        @onmousedown="e => CellMouseDown(pos, e)" @onmousedown:preventDefault="true" @onmousedown:stopPropagation="true"
                        @onmouseup="e => CellMouseUp(pos, e)" @onmouseup:preventDefault="true" @onmouseup:stopPropagation="true"
                        @onmousemove="e => CellMouseMove(pos, e)" @onmousemove:preventDefault="true" @onmousemove:stopPropagation="true"
                        >
                    @{
                        if (pos.IsIntestazioneColonna)
                        {
                            <span>@Utils.GetColumnLabel(col)</span>
                        }
                        else if (pos.IsIntestazioneRiga)
                        {
                            <span>@row</span>
                        }
                        else if (pos == CurrentPosition && InEdit)
                        {
                            var cell = GetCell(pos, true);
                            <input @key=pos @ref="CellInput"
                                    @bind="cell.Value" @bind:event="oninput"
                                    style="width:100%;height:100%"
                                    />
                        }
                        else
                        {
                            <span>@GetCell(pos)?.Value</span>
                        }
                    }
                </div>
                left += width;
            }
            top += height;
        }
    }
    </div>
</div>

